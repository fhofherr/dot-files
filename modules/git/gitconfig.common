[alias]
    a = add
    ai = add -i
    ca = commit --amend
    cam = commit --amend --no-edit
    cc = commit
    cob = checkout -b
    co = checkout
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    merged = branch --merged
    p = push
    po = push origin
    pfo = push -f origin
    pup = pull --prune
    ri = rebase -i
    st = status -s
    tree = log --graph --all -10 --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)â€” %an%C(reset)' --abbrev-commit
    tagwk = "!f() { local tag; tag=\"$(date +%Y.%V.$(( $(git tag -l | grep -c $(date +%Y.%V)) + 1)))\"; git tag -a \"$tag\" ; }; f"
[core]
    autocrlf = input
[filter "kicad_project"]
	clean = sed -E 's/^update=.*$/update=Date/'
	smudge = cat
[filter "kicad_sch"]
	clean = "sed -E 's/#(PWR|FLG)[0-9]+/#\\1?/'"
	smudge = cat
[init]
    defaultBranch = main
[merge]
    tool = nvim
[mergetool]
    prompt = false
[mergetool "nvim"]
    # Note: requires the vim fugitive plugin to be installed
    # See also: https://www.grzegorowski.com/using-vim-or-neovim-nvim-as-a-git-mergetool
    cmd = nvim -f -c \"Gdiffsplit!\" \"$MERGED\"
[pull]
    ff = only
[rerere]
    enabled = true
[url "ssh://git@github.com/fhofherr"]
    insteadOf = https://github.com/fhofherr
[url "ssh://git@gitlab.com/fhofherr"]
    insteadOf = https://gitlab.com/fhofherr
